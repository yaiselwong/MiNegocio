@page "/login"
@using MiNegocio.Client.Shared.Services
@using MiNegocio.Shared.Dto.Request
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <div class="card shadow">
            <div class="card-body">
                <h3 class="card-title text-center mb-4">Login</h3>

                <EditForm Model="@loginRequest" OnValidSubmit="@HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />

                    <div class="mb-3">
                        <label for="username" class="form-label">Username:</label>
                        <InputText id="username" class="form-control" @bind-Value="loginRequest.Username" />
                        <ValidationMessage For="@(() => loginRequest.Username)" class="text-danger" />
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">Password:</label>
                        <InputText type="password" id="password" class="form-control" @bind-Value="loginRequest.Password" />
                        <ValidationMessage For="@(() => loginRequest.Password)" class="text-danger" />
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                <span>Logging in...</span>
                            }
                            else
                            {
                                <span>Login</span>
                            }
                        </button>
                    </div>
                </EditForm>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-3">
                        @errorMessage
                    </div>
                }

                <div class="text-center mt-3">
                    @* <small>Default: admin / admin123</small> *@
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var success = await AuthStateProvider.LoginAsync(loginRequest);

            if (success)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Login failed: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
